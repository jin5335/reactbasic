{"ast":null,"code":"import _slicedToArray from \"/Users/jinju/Desktop/Study/ReactByVelopert/hello-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jinju/Desktop/Study/ReactByVelopert/hello-react/src/Average.js\";\nimport React, { useState } from 'react';\nimport App from './App';\n\nconst getAverage = numbers => {\n  console.log('평균값 계산중...');\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        number = _useState4[0],\n        setNumber = _useState4[1];\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onInsert = e => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: number,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: onInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\uB4F1\\uB85D\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, list.map((value, index) => React.createElement(\"li\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, value))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\uD3C9\\uADE0\\uAC12:\"), \" \", getAverage(list), \";\"));\n};\n\nexport default Average;","map":{"version":3,"sources":["/Users/jinju/Desktop/Study/ReactByVelopert/hello-react/src/Average.js"],"names":["React","useState","App","getAverage","numbers","console","log","length","sum","reduce","a","b","Average","list","setList","number","setNumber","onChange","e","target","value","onInsert","nextList","concat","parseInt","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,UAAU,GAAGC,OAAO,IAAI;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,MAAIF,OAAO,CAACG,MAAR,KAAmB,CAAvB,EAA0B,OAAO,CAAP;AAC1B,QAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,CAAZ;AACA,SAAOH,GAAG,GAAGJ,OAAO,CAACG,MAArB;AACD,CALD;;AAOA,MAAMK,OAAO,GAAG,MAAM;AAAA,oBACIX,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QACbY,IADa;AAAA,QACPC,OADO;;AAAA,qBAEQb,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEbc,MAFa;AAAA,QAELC,SAFK;;AAIpB,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpBF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AACpB,UAAMI,QAAQ,GAAGT,IAAI,CAACU,MAAL,CAAYC,QAAQ,CAACT,MAAD,CAApB,CAAjB;AACAD,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACAN,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAED,MAAd;AAAsB,IAAA,QAAQ,EAAEE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACY,GAAL,CAAS,CAACL,KAAD,EAAQM,KAAR,KACR;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBN,KAAjB,CADD,CADH,CAHF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,OACejB,UAAU,CAACU,IAAD,CADzB,MARF,CADF;AAcD,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport App from './App';\n\nconst getAverage = numbers => {\n  console.log('평균값 계산중...');\n  if (numbers.length === 0) return 0;\n  const sum = numbers.reduce((a, b) => a + b);\n  return sum / numbers.length;\n};\n\nconst Average = () => {\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState([]);\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n  const onInsert = e => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <input value={number} onChange={onChange} />\n      <button onClick={onInsert}>등록</button>\n      <ul>\n        {list.map((value, index) => (\n          <li key={index}>{value}</li>\n        ))}\n      </ul>\n      <div>\n        <b>평균값:</b> {getAverage(list)};\n      </div>\n    </div>\n  );\n};\n\nexport default Average;\n"]},"metadata":{},"sourceType":"module"}