{"ast":null,"code":"import _objectSpread from \"/Users/jinju/Desktop/Study/ReactByVelopert/reactbasic/todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/jinju/Desktop/Study/ReactByVelopert/reactbasic/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jinju/Desktop/Study/ReactByVelopert/reactbasic/todo-app/src/App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const _useState = useState([{\n    id: 1,\n    text: '리액트 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링해 보기',\n    checked: true\n  }, {\n    id: 3,\n    text: '일정 관리 앱 만들어보기',\n    checked: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? _objectSpread({}, todo, {\n      checked: !todo.checked\n    }) : todo));\n  }, [todos]);\n  return React.createElement(TodoTemplate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/jinju/Desktop/Study/ReactByVelopert/reactbasic/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","App","id","text","checked","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACUN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANiC,EAWjC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXiC,CAAD,CADlB;AAAA;AAAA,QACTC,KADS;AAAA,QACFC,QADE;;AAmBhB,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAC1BM,IAAI,IAAI;AACN,UAAMM,IAAI,GAAG;AACXP,MAAAA,EAAE,EAAEK,MAAM,CAACG,OADA;AAEXP,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMAE,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CARM,CAQe;AACtB,GAVyB,EAW1B,CAACL,KAAD,CAX0B,CAA5B;AAcA,QAAMO,QAAQ,GAAGf,WAAW,CAC1BK,EAAE,IAAI;AACJI,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAI1B,CAACG,KAAD,CAJ0B,CAA5B;AAOA,QAAMS,QAAQ,GAAGjB,WAAW,CAC1BK,EAAE,IAAI;AACJI,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAUN,IAAI,IACZA,IAAI,CAACP,EAAL,KAAYA,EAAZ,qBAAsBO,IAAtB;AAA4BL,MAAAA,OAAO,EAAE,CAACK,IAAI,CAACL;AAA3C,SAAuDK,IADzD,CADM,CAAR;AAKD,GAPyB,EAQ1B,CAACJ,KAAD,CAR0B,CAA5B;AAWA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAwB,IAAA,QAAQ,EAAEO,QAAlC;AAA4C,IAAA,QAAQ,EAAEE,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA3DD;;AA6DA,eAAeb,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어보기',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n\n      setTodos(todos.concat(todo));\n      nextId.current += 1; // nextId 1씩 더하기\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}